<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc  
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd" >

	<!-- 自动搜索@Controller标注的类 -->	
	<context:component-scan base-package="com.lf.web.**" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository" />
	</context:component-scan>
	
	<!-- 默认访问跳转到登录页面(即定义无需Controller的url<->view直接映射) -->  
    <mvc:view-controller path="/" view-name="forward:/WEB-INF/view/main.jsp"/>
	
	<!-- 默认视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="1" />
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
	    <property name="prefix" value="/WEB-INF/view/"/>
	    <property name="suffix" value=".jsp"></property>
	 </bean>
	 
	<!-- 拦截器 -->
    <mvc:interceptors>
    	<!-- 防重复提交拦截器 -->
		<mvc:interceptor>
   	 		<!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->  
			<mvc:mapping path="/**/*.do" />
			<bean class="com.lf.web.mvc.interceptor.token.TokenInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 国际化,并且可以批定文件编码,可以使用classpath: 或者WEB-INF/ 前缀 -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    	<property name="basenames">
    		<list>
    			<value>classpath:i18n/messages</value>
    			<value>classpath:ValidationMessages</value>
    		</list>
    	</property>
    	<property name="defaultEncoding" value="UTF-8"/>
    	<property name="cacheSeconds" value="60"/>
    </bean>

	<!-- 全局校验器 -->    
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
	
	<!-- jackson 自定义mapper,处理一些java类型转换成json后到前端js使用的问题，比如long值转换成js数值后会丢失精度 -->
	<bean id="jsonMapper" class="com.lf.web.mvc.converter.json.JacksonMapper"/>
    
    <!-- 注解驱动：
    	会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的。
		并提供了：数据绑定支持，@NumberFormatannotation支持，@DateTimeFormat支持，@Valid支持，读写XML的支持（JAXB），读写JSON的支持（Jackson）。
		后面，我们处理响应ajax请求时，就使用到了对json的支持。  -->
    <mvc:annotation-driven validator="validator" >
    	<mvc:message-converters>
    		<!-- 文本转换器 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/plain;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<!-- json转换器 -->
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper" ref="jsonMapper"/>
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
						<value>text/javascript;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
    </mvc:annotation-driven>
    
    

</beans>